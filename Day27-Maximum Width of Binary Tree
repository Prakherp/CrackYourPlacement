int widthOfBinaryTree(TreeNode* root) {
    if(!root)
        return 0;
    queue<pair<TreeNode*,long long int>> q;
    q.push({root,0});
    long long int res=INT_MIN;
    while(!q.empty()){
        int n=q.size();
        long long int first, last;
        long long int min_idx=q.front().second;
        for(int i=0;i<n;i++){
            long long int idx=q.front().second-min_idx;
            TreeNode* temp=q.front().first;
            q.pop();
            if(i==0)    first=idx;
            if(i==n-1)  last=idx;
            if(temp->left)  q.push({temp->left,2*idx+1});
            if(temp->right)  q.push({temp->right,2*idx+2});
        }
        res=max(res,(last-first+1));
    }
    return res;
}
