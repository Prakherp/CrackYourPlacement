https://leetcode.com/submissions/detail/1337602099/

bool bfs(vector<vector<char>>& board, string word, int x, int y, int ind, vector<vector<bool>>& vis){
    if(ind==word.length()-1)
        return true;

    int m=board.size();
    int n=board[0].size();
    int dx[4]={1,0,-1,0};
    int dy[4]={0,1,0,-1};

    for(int i=0;i<4;i++){
        int nx=x+dx[i];
        int ny=y+dy[i];
        if(nx>=0 && ny>=0 && nx<m && ny<n && !vis[nx][ny] && board[nx][ny]==word[ind+1]){
            vis[nx][ny]=true;
            if(bfs(board, word, nx,ny,ind+1, vis))
                return true;
            vis[nx][ny]=false;
        }
    }
    return false;
}
bool exist(vector<vector<char>>& board, string word) {
    int m=board.size();
    int n=board[0].size();

    for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
            if(board[i][j]==word[0]){
                vector<vector<bool>> vis(m,vector<bool>(n,false));
                vis[i][j]=true;
                if(bfs(board, word,i,j,0,vis))
                    return true;
            }
        }
    }
    return false;
}
