https://leetcode.com/submissions/detail/1334109665/

void solve(vector<vector<char>>& mat) {
    int m=mat.size();
    int n=mat[0].size();
    queue<pair<int, int>> q;
    vector<vector<bool>> vis(m, vector<bool>(n,false));
    for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
            if((i==m-1 || j==n-1 || i==0 || j==0) && mat[i][j]=='O'){
                vis[i][j]=true;
                q.push({i,j});
            }
        }
    }
    int dx[4]={1,0,-1,0};
    int dy[4]={0,1,0,-1};

    while(!q.empty()){
        int x=q.front().first;
        int y=q.front().second;
        q.pop();

        for(int i=0;i<4;i++){
            int nx=x+dx[i];
            int ny=y+dy[i];
            if(nx>=0 && nx<m && ny>=0 && ny<n && mat[nx][ny]=='O' && !vis[nx][ny]){
                vis[nx][ny]=true;
                q.push({nx,ny});
            }
        }
    }

    for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
            if(mat[i][j]=='O' && !vis[i][j])
                mat[i][j]='X';
        }
    }
}
