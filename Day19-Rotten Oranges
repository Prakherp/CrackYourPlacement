int orangesRotting(vector<vector<int>>& grid) {
    // Code here
    int m=grid.size();
    int n=grid[0].size();
    
    queue<pair<int,int>> q;
    //vector<vector<bool>> vis(m,vector<bool>(n,false));
    for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
            if(grid[i][j]==2){
                q.push({i,j});
                //vis[i][j]=true;
            }
        }
    }
    if(q.empty())   return 0;
    int t=0;
    int dx[4]={0,1,0,-1};
    int dy[4]={1,0,-1,0};
    while(!q.empty()){
        int num=q.size();
        while(num--){
            int x=q.front().first;
            int y=q.front().second;
            q.pop();
            for(int i=0;i<4;i++){
                int nx=x+dx[i];
                int ny=y+dy[i];
                if(nx>=0 && nx<m && ny>=0 && ny<n && grid[nx][ny]==1){
                    grid[nx][ny]=2;
                    q.push({nx,ny});
                }
            }
        }
        t++;
    }
    bool flag=false;
    for(int i=0;i<m;i++){
        for(int j=0;j<n;j++){
            if(grid[i][j]==1){
                flag=true;
                break;
            }
        }
    }
    return flag? -1:t-1;
}
